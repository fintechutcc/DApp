{"ast":null,"code":"var CipherBase = require('cipher-base');\n\nvar des = require('des.js');\n\nvar inherits = require('inherits');\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n};\nmodes.des = modes['des-cbc'];\nmodes.des3 = modes['des-ede3-cbc'];\nmodule.exports = DES;\ninherits(DES, CipherBase);\n\nfunction DES(opts) {\n  CipherBase.call(this);\n  var modeName = opts.mode.toLowerCase();\n  var mode = modes[modeName];\n  var type;\n\n  if (opts.decrypt) {\n    type = 'decrypt';\n  } else {\n    type = 'encrypt';\n  }\n\n  var key = opts.key;\n\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)]);\n  }\n\n  var iv = opts.iv;\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  });\n}\n\nDES.prototype._update = function (data) {\n  return new Buffer(this._des.update(data));\n};\n\nDES.prototype._final = function () {\n  return new Buffer(this._des.final());\n};","map":{"version":3,"sources":["/home/suparerk/Documents/DApp/06_Wallet/node_modules/browserify-des/index.js"],"names":["CipherBase","require","des","inherits","modes","CBC","instantiate","EDE","DES","des3","module","exports","opts","call","modeName","mode","toLowerCase","type","decrypt","key","Buffer","concat","slice","iv","_des","create","prototype","_update","data","update","_final","final"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIG,KAAK,GAAG;AACV,kBAAgBF,GAAG,CAACG,GAAJ,CAAQC,WAAR,CAAoBJ,GAAG,CAACK,GAAxB,CADN;AAEV,cAAYL,GAAG,CAACK,GAFN;AAGV,iBAAeL,GAAG,CAACG,GAAJ,CAAQC,WAAR,CAAoBJ,GAAG,CAACK,GAAxB,CAHL;AAIV,aAAWL,GAAG,CAACK,GAJL;AAKV,aAAWL,GAAG,CAACG,GAAJ,CAAQC,WAAR,CAAoBJ,GAAG,CAACM,GAAxB,CALD;AAMV,aAAWN,GAAG,CAACM;AANL,CAAZ;AAQAJ,KAAK,CAACF,GAAN,GAAYE,KAAK,CAAC,SAAD,CAAjB;AACAA,KAAK,CAACK,IAAN,GAAaL,KAAK,CAAC,cAAD,CAAlB;AACAM,MAAM,CAACC,OAAP,GAAiBH,GAAjB;AACAL,QAAQ,CAACK,GAAD,EAAMR,UAAN,CAAR;;AACA,SAASQ,GAAT,CAAcI,IAAd,EAAoB;AAClBZ,EAAAA,UAAU,CAACa,IAAX,CAAgB,IAAhB;AACA,MAAIC,QAAQ,GAAGF,IAAI,CAACG,IAAL,CAAUC,WAAV,EAAf;AACA,MAAID,IAAI,GAAGX,KAAK,CAACU,QAAD,CAAhB;AACA,MAAIG,IAAJ;;AACA,MAAIL,IAAI,CAACM,OAAT,EAAkB;AAChBD,IAAAA,IAAI,GAAG,SAAP;AACD,GAFD,MAEO;AACLA,IAAAA,IAAI,GAAG,SAAP;AACD;;AACD,MAAIE,GAAG,GAAGP,IAAI,CAACO,GAAf;;AACA,MAAIL,QAAQ,KAAK,SAAb,IAA0BA,QAAQ,KAAK,aAA3C,EAA0D;AACxDK,IAAAA,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,CAACF,GAAD,EAAMA,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAN,CAAd,CAAN;AACD;;AACD,MAAIC,EAAE,GAAGX,IAAI,CAACW,EAAd;AACA,OAAKC,IAAL,GAAYT,IAAI,CAACU,MAAL,CAAY;AACtBN,IAAAA,GAAG,EAAEA,GADiB;AAEtBI,IAAAA,EAAE,EAAEA,EAFkB;AAGtBN,IAAAA,IAAI,EAAEA;AAHgB,GAAZ,CAAZ;AAKD;;AACDT,GAAG,CAACkB,SAAJ,CAAcC,OAAd,GAAwB,UAAUC,IAAV,EAAgB;AACtC,SAAO,IAAIR,MAAJ,CAAW,KAAKI,IAAL,CAAUK,MAAV,CAAiBD,IAAjB,CAAX,CAAP;AACD,CAFD;;AAGApB,GAAG,CAACkB,SAAJ,CAAcI,MAAd,GAAuB,YAAY;AACjC,SAAO,IAAIV,MAAJ,CAAW,KAAKI,IAAL,CAAUO,KAAV,EAAX,CAAP;AACD,CAFD","sourcesContent":["var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return new Buffer(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return new Buffer(this._des.final())\n}\n"]},"metadata":{},"sourceType":"script"}