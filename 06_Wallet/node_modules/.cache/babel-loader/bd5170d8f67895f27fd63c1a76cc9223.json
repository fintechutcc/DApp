{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/suparerk/Documents/DApp/06_Wallet/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Tokens20 from './Tokens/all20';\nimport Tokens721 from './Tokens/all721';\nimport Nav from './Components/Nav';\nimport Description from './Components/Description';\nimport Container from './Components/Container';\nimport InstallMetamask from './Components/InstallMetamask';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.setNetwork = () => {\n      let networkName,\n          that = this;\n      this.web3.version.getNetwork(function (err, networkId) {\n        switch (networkId) {\n          case \"1\":\n            networkName = \"Main\";\n            break;\n\n          case \"2\":\n            networkName = \"Morden\";\n            break;\n\n          case \"3\":\n            networkName = \"Ropsten\";\n            break;\n\n          case \"4\":\n            networkName = \"Rinkeby\";\n            break;\n\n          case \"42\":\n            networkName = \"Kovan\";\n            break;\n\n          default:\n            networkName = networkId;\n        }\n\n        that.setState({\n          network: networkName\n        });\n      });\n    };\n\n    this.newTransfer20 = index => {\n      this.setState({\n        transferDetail20: this.state.tokens20[index]\n      });\n    };\n\n    this.newTransfer721 = index => {\n      this.setState({\n        transferDetail721: this.state.tokens721[index]\n      });\n    };\n\n    this.newMint20 = index => {\n      this.setState({\n        mintDetail20: this.state.tokens20[index]\n      });\n    };\n\n    this.newMint721 = index => {\n      this.setState({\n        mintDetail721: this.state.tokens721[index]\n      });\n    };\n\n    this.newApprove20 = index => {\n      this.setState({\n        approveDetail20: this.state.tokens20[index]\n      });\n    };\n\n    this.newApprove721 = index => {\n      this.setState({\n        approveDetail721: this.state.tokens721[index]\n      });\n    };\n\n    this.closeTransfer = () => {\n      this.setState({\n        transferDetail20: {},\n        transferDetail721: {},\n        mintDetail20: {},\n        mintDetail721: {},\n        approveDetail20: {},\n        approveDetail721: {},\n        fields: {}\n      });\n    };\n\n    this.setGasPrice = () => {\n      this.web3.eth.getGasPrice((err, price) => {\n        price = this.web3.fromWei(price, 'gwei');\n        if (!err) this.setState({\n          defaultGasPrice: price.toNumber()\n        });\n      });\n    };\n\n    this.resetApp = () => {\n      this.setState({\n        transferDetail20: {},\n        transferDetail721: {},\n        fields: {\n          receiver: null,\n          amount: null,\n          gasPrice: null,\n          gasLimit: null,\n          metadata: null,\n          tokenId: null\n        },\n        defaultGasPrice: null\n      });\n      window.location.reload();\n    };\n\n    this.Transfer = () => {\n      this.setState({\n        inProgress: true\n      }); //this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\n      var contract;\n\n      if (this.state.fields.metadata) {\n        contract = this.web3.eth.contract(this.state.transferDetail721.abi).at(this.state.transferDetail721.address);\n      } else {\n        contract = this.web3.eth.contract(this.state.transferDetail20.abi).at(this.state.transferDetail20.address);\n      }\n\n      let app = this;\n      var metadata;\n      var tokenId;\n      var amount;\n\n      if (this.state.fields.metadata) {\n        metadata = this.state.fields.metadata;\n        tokenId = this.state.fields.tokenid;\n      } else {\n        amount = this.state.fields.amount + 'e' + this.state.transferDetail20.decimal;\n        amount = new this.web3.BigNumber(amount).toNumber();\n      }\n\n      let receiver = this.state.fields.receiver.toString();\n      let account = this.state.account;\n\n      if (metadata) {\n        contract.transferNFT(account, receiver, tokenId, metadata, (err, response) => {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      } else {\n        contract.transferFrom(account, receiver, amount, (err, response) => {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      }\n    };\n\n    this.Mint = () => {\n      this.setState({\n        inProgress: true\n      }); //this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\n      var contract;\n\n      if (this.state.fields.metadata) {\n        contract = this.web3.eth.contract(this.state.mintDetail721.abi).at(this.state.mintDetail721.address);\n      } else {\n        contract = this.web3.eth.contract(this.state.mintDetail20.abi).at(this.state.mintDetail20.address);\n      }\n\n      let app = this;\n      var metadata;\n      var amount;\n\n      if (this.state.fields.metadata) {\n        metadata = this.state.fields.metadata;\n      } else {\n        amount = this.state.fields.amount + 'e' + this.state.mintDetail20.decimal;\n        amount = new this.web3.BigNumber(amount).toNumber();\n      }\n\n      let receiver = this.state.fields.receiver.toString();\n\n      if (metadata) {\n        contract.createNFT(receiver, metadata, (err, response) => {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      } else {\n        contract.mint(receiver, amount, (err, response) => {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      }\n    };\n\n    this.Approve = () => {\n      this.setState({\n        inProgress: true\n      }); //this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\n      console.log(this.state.approveDetail721.address);\n      var contract;\n\n      if (this.state.approveDetail721.abi) {\n        contract = this.web3.eth.contract(this.state.approveDetail721.abi).at(this.state.approveDetail721.address);\n      } else {\n        contract = this.web3.eth.contract(this.state.approveDetail20.abi).at(this.state.approveDetail20.address);\n      }\n\n      let app = this;\n      let receiver = this.state.fields.receiver.toString();\n\n      if (this.state.approveDetail20.abi) {\n        let amount = this.state.fields.amount + 'e' + this.state.approveDetail20.decimal;\n        amount = new this.web3.BigNumber(amount).toNumber();\n        contract.approve(receiver, amount, (err, response) => {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      } else {\n        let tokenid = this.state.fields.tokenid;\n        contract.approve(receiver, tokenid, (err, response) => {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      }\n    };\n\n    this.onInputChangeUpdateField = (name, value) => {\n      let fields = this.state.fields;\n      fields[name] = value;\n      this.setState({\n        fields\n      });\n    };\n\n    this.tokens20 = Tokens20;\n    this.tokens721 = Tokens721;\n    this.appName = 'TokenWallet';\n    this.isWeb3 = true;\n    this.newTransfer20 = this.newTransfer20.bind(this);\n    this.newTransfer721 = this.newTransfer721.bind(this);\n    this.newMint20 = this.newMint20.bind(this);\n    this.newMint721 = this.newMint721.bind(this);\n    this.newApprove20 = this.newApprove20.bind(this);\n    this.newApprove721 = this.newApprove721.bind(this);\n    this.closeTransfer = this.closeTransfer.bind(this);\n    this.onInputChangeUpdateField = this.onInputChangeUpdateField.bind(this);\n    this.state = {\n      inProgress: false,\n      tx20: null,\n      tx721: null,\n      network: 'Checking...',\n      account: null,\n      tokens20: [],\n      tokens721: [],\n      transferDetail20: {},\n      transferDetail721: {},\n      mintDetail20: {},\n      mintDetail721: {},\n      approveDetail20: {},\n      approveDetail721: {},\n      fields: {\n        receiver: null,\n        amount: null,\n        metadata: null,\n        tokenId: null,\n        gasPrice: null,\n        gasLimit: null\n      },\n      defaultGasPrice: null,\n      defaultGasLimit: 200000\n    };\n  }\n\n  componentDidMount() {\n    var account;\n\n    if (window.ethereum) {\n      const ethereum = window.ethereum;\n      window.web3 = new Web3(ethereum);\n      this.web3 = new Web3(ethereum);\n      ethereum.enable().then(accounts => {\n        account = accounts[0];\n        this.web3.eth.defaultAccount = account;\n        let app = this;\n        this.setState({\n          account\n        });\n        this.setNetwork();\n        this.setGasPrice();\n        Tokens20.forEach(token => {\n          let contract = this.web3.eth.contract(token.abi);\n          let erc20Token = contract.at(token.address);\n          erc20Token.balanceOf(account, function (err, response) {\n            if (!err) {\n              let decimal = token.decimal;\n              let precision = '1e' + decimal;\n              let balance = response.c[0] / precision;\n              let name = token.name;\n              let symbol = token.symbol;\n              let icon = token.icon;\n              let abi = token.abi;\n              let address = token.address;\n              balance = balance >= 0 ? balance : 0;\n              let tokens20 = app.state.tokens20;\n              if (balance > 0) tokens20.push({\n                decimal,\n                balance,\n                name,\n                symbol,\n                icon,\n                abi,\n                address\n              });\n              app.setState({\n                tokens20\n              });\n            }\n          });\n        });\n        Tokens721.forEach(token721 => {\n          let contract = this.web3.eth.contract(token721.abi);\n          let erc721Token = contract.at(token721.address);\n          erc721Token.MDTrack(account, function (err, response) {\n            if (!err) {\n              let name = token721.name;\n              let symbol = token721.symbol;\n              let icon = token721.icon;\n              let abi = token721.abi;\n              let address = token721.address;\n              let tokenid = response.c[0];\n              tokenid = tokenid >= 0 ? tokenid : 0;\n\n              if (tokenid !== 0) {\n                erc721Token.tokenURI(tokenid, function (err, response) {\n                  if (!err) {\n                    let metadata = response;\n                    let tokens721 = app.state.tokens721;\n                    tokens721.push({\n                      name,\n                      symbol,\n                      tokenid,\n                      icon,\n                      abi,\n                      address,\n                      metadata\n                    });\n                    app.setState({\n                      tokens721\n                    });\n                  }\n                });\n              }\n            }\n          });\n        });\n      });\n    }\n  }\n\n  render() {\n    if (this.isWeb3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          appName: this.appName,\n          network: this.state.network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          onInputChangeUpdateField: this.onInputChangeUpdateField,\n          transferDetail20: this.state.transferDetail20,\n          transferDetail721: this.state.transferDetail721,\n          mintDetail20: this.state.mintDetail20,\n          mintDetail721: this.state.mintDetail721,\n          approveDetail20: this.state.approveDetail20,\n          approveDetail721: this.state.approveDetail721,\n          closeTransfer: this.closeTransfer,\n          newTransfer20: this.newTransfer20,\n          newTransfer721: this.newTransfer721,\n          newApprove20: this.newApprove20,\n          newApprove721: this.newApprove721,\n          newMint20: this.newMint20,\n          newMint721: this.newMint721,\n          Transfer: this.Transfer,\n          Mint: this.Mint,\n          Approve: this.Approve,\n          account: this.state.account,\n          defaultGasPrice: this.state.defaultGasPrice,\n          defaultGasLimit: this.state.defaultGasLimit,\n          tx20: this.state.tx20,\n          tx721: this.state.tx721,\n          inProgress: this.state.inProgress,\n          fields: this.state.fields,\n          tokens20: this.state.tokens20,\n          tokens721: this.state.tokens721\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(InstallMetamask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/suparerk/Documents/DApp/06_Wallet/src/App.js"],"names":["React","Component","Web3","Tokens20","Tokens721","Nav","Description","Container","InstallMetamask","App","constructor","setNetwork","networkName","that","web3","version","getNetwork","err","networkId","setState","network","newTransfer20","index","transferDetail20","state","tokens20","newTransfer721","transferDetail721","tokens721","newMint20","mintDetail20","newMint721","mintDetail721","newApprove20","approveDetail20","newApprove721","approveDetail721","closeTransfer","fields","setGasPrice","eth","getGasPrice","price","fromWei","defaultGasPrice","toNumber","resetApp","receiver","amount","gasPrice","gasLimit","metadata","tokenId","window","location","reload","Transfer","inProgress","contract","abi","at","address","app","tokenid","decimal","BigNumber","toString","account","transferNFT","response","console","log","tx20","tx721","transferFrom","Mint","createNFT","mint","Approve","approve","onInputChangeUpdateField","name","value","appName","isWeb3","bind","defaultGasLimit","componentDidMount","ethereum","enable","then","accounts","defaultAccount","forEach","token","erc20Token","balanceOf","precision","balance","c","symbol","icon","push","token721","erc721Token","MDTrack","tokenURI","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport Tokens20 from './Tokens/all20';\nimport Tokens721 from './Tokens/all721';\nimport Nav from './Components/Nav';\nimport Description from './Components/Description';\nimport Container from './Components/Container';\nimport InstallMetamask from './Components/InstallMetamask';\n\n\n\nclass App extends Component {\n    constructor(){\n        super();\n\n        this.tokens20 = Tokens20;\n\t\tthis.tokens721 = Tokens721;\n        this.appName = 'TokenWallet';\n        this.isWeb3 = true;                 \n        this.newTransfer20 = this.newTransfer20.bind(this);\n\t\tthis.newTransfer721 = this.newTransfer721.bind(this);\n\t\tthis.newMint20 = this.newMint20.bind(this);\n\t\tthis.newMint721 = this.newMint721.bind(this);\n\t\tthis.newApprove20 = this.newApprove20.bind(this);\n\t\tthis.newApprove721 = this.newApprove721.bind(this);\n        this.closeTransfer = this.closeTransfer.bind(this);\n        this.onInputChangeUpdateField = this.onInputChangeUpdateField.bind(this);\n\n        this.state = {\n            inProgress: false,\n            tx20: null,\n\t\t\ttx721: null,\n            network: 'Checking...',\n            account: null,\n            tokens20: [],\n\t\t\ttokens721: [],\n            transferDetail20: {},\n\t\t\ttransferDetail721: {},\n\t\t\tmintDetail20: {},\n\t\t\tmintDetail721: {},\n\t\t\tapproveDetail20: {},\n\t\t\tapproveDetail721: {},\n            fields: {\n                receiver: null,\n                amount: null,\n\t\t\t\tmetadata: null,\n\t\t\t\ttokenId: null,\n                gasPrice: null,\n                gasLimit: null,\n            },\n            defaultGasPrice: null,\n            defaultGasLimit: 200000\n        };\n\t\t}\n  \n    \t\t\n\t\n\t\n\t\n    setNetwork = () => {\n        let networkName,that = this;\n\n        this.web3.version.getNetwork(function (err, networkId) {\n            switch (networkId) {\n                case \"1\":\n                    networkName = \"Main\";\n                    break;\n                case \"2\":\n                    networkName = \"Morden\";\n                    break;\n                case \"3\":\n                    networkName = \"Ropsten\";\n                    break;\n                case \"4\":\n                    networkName = \"Rinkeby\";\n                    break;\n                case \"42\":\n                    networkName = \"Kovan\";\n                    break;\n                default:\n                    networkName = networkId;\n            }\n\n            that.setState({\n                network: networkName\n            })\n        });\n    };\n\n\n\n\tnewTransfer20 = (index) => {\n        this.setState({\n            transferDetail20: this.state.tokens20[index]\n        })\n    };\n\n\n\n\tnewTransfer721 = (index) => {\n        this.setState({\n            transferDetail721: this.state.tokens721[index]\n        })\n    };\n\n\tnewMint20 = (index) => {\n        this.setState({\n            mintDetail20: this.state.tokens20[index]\n        })\n    };\n\n\n\n\tnewMint721 = (index) => {\n        this.setState({\n            mintDetail721: this.state.tokens721[index]\n        })\n    };\n\n\tnewApprove20 = (index) => {\n        this.setState({\n            approveDetail20: this.state.tokens20[index]\n        })\n    };\n\n\n\n\tnewApprove721 = (index) => {\n        this.setState({\n            approveDetail721: this.state.tokens721[index]\n        })\n    };\n\n\n\tcloseTransfer = () => {\n        \tthis.setState({\n            transferDetail20: {},\n\t\t\ttransferDetail721: {},\n\t\t\tmintDetail20: {},\n\t\t\tmintDetail721: {},\n\t\t\tapproveDetail20: {},\n\t\t\tapproveDetail721: {},\n            fields: {},\n        })\n\t};\n\n    setGasPrice = () => {\n        this.web3.eth.getGasPrice((err,price) => {\n            price = this.web3.fromWei(price,'gwei');\n            if(!err) this.setState({defaultGasPrice: price.toNumber()})\n        \t});\n    \t};\n\n    \n\n    resetApp = () => {\n      this.setState({\n          transferDetail20: {},\n\t\t  transferDetail721: {},\n          fields: {\n              receiver: null,\n              amount: null,\n              gasPrice: null,\n              gasLimit: null,\n\t\t\t  metadata: null,\n\t\t\t  tokenId: null,\n          },\n          defaultGasPrice: null,\n      })\n\t  window.location.reload();\n\t\t\n    };\n\n\n\n    Transfer = () => {\n\n        \tthis.setState({\n            \tinProgress: true\n        \t\t\t});\n\t\t\n\t\t\t//this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\t\t\n       \t\tvar contract;\n\t\t\tif (this.state.fields.metadata)\n\t\t\t\t{\n\t\t \t\t\tcontract = this.web3.eth.contract(this.state.transferDetail721.abi).at(this.state.transferDetail721.address);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n         \t\t\tcontract = this.web3.eth.contract(this.state.transferDetail20.abi).at(this.state.transferDetail20.address);\n\t\t\t\t}\n\t\t\n\t\t\tlet app = this; \n\t\t\tvar metadata;\n\t\t\tvar tokenId;\n\t\t\tvar amount;\n\t\t\n\t\t\tif(this.state.fields.metadata)\n\t\t\t\t{\n\t\t \t\t\tmetadata = this.state.fields.metadata;\n\t\t \t\t\ttokenId = this.state.fields.tokenid;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t \t\t\tamount = this.state.fields.amount  + 'e' + this.state.transferDetail20.decimal;\t\n\t\t \t\t\tamount = new this.web3.BigNumber(amount).toNumber();\n\t\t\t\t}\t\n        \n\t\t\t\n        \tlet receiver = this.state.fields.receiver.toString();\n\t\t\tlet account = this.state.account;\n        \n\t\t\tif(metadata)\n\t\t\t\t{\n\t\t\t\t\tcontract.transferNFT(account,receiver, tokenId, metadata, (err,response)=>{\n\t\t\t\t\t\n\t\t\t\t\tif(response) {\n                        \t\t    console.log(response);\n\t\t\t\t\t\t\t\t\tapp.resetApp();\n\n                                \tapp.setState({\n                                    tx20: response.tx20,\n\t\t\t\t\t\t\t\t\ttx721: response.tx721,\n                                    inProgress: false\n                                });\n \t\t\t\t\t\t}else\t{\n                \t\t\t\t\tconsole.log(err);\n            \t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontract.transferFrom(account,receiver, amount, (err,response)=>{\n            \n\t\t\t\t\t\t\t\t\tif(response) {\n                                \t\t\t\t\tconsole.log(response);\n \t\n                                \t\t\t\t\tapp.resetApp();\n\n                                \t\t\t\t\tapp.setState({\n                                    \t\t\t\ttx20: response.tx20,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttx721: response.tx721,\n                                    \t\t\t\tinProgress: false\n                                \t\t\t\t\t});\n                               \t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\telse\t\t{\n                \t\t\t\t\t\t\t\t\tconsole.log(err);\n            \t\t\t\t\t\t\t\t\t}\n        \t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\t    \n\t\t\t\t\t\t};\n\n\n    Mint = () => {\n\n        this.setState({\n            inProgress: true\n        });\n\t\t\n\t\t//this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\t\t\n        var contract;\n\t\tif (this.state.fields.metadata)\n\t\t{\n\t\tcontract = this.web3.eth.contract(this.state.mintDetail721.abi).at(this.state.mintDetail721.address);\n\t\t}\n\t\telse\n\t\t{\n        contract = this.web3.eth.contract(this.state.mintDetail20.abi).at(this.state.mintDetail20.address);\n\t\t}\n\t\t\n        let app = this; \n\t\tvar metadata;\n\t\tvar amount;\n\t\t\n\t\tif(this.state.fields.metadata)\n\t\t{\n\t\tmetadata = this.state.fields.metadata;\n\t\t}\n\t\telse\n\t\t{\n\t\tamount = this.state.fields.amount  + 'e' + this.state.mintDetail20.decimal;\t\n\t\tamount = new this.web3.BigNumber(amount).toNumber();\n\t\t}\t\n        \n        let receiver = this.state.fields.receiver.toString();\n\t\t\n        \t\t\n\t\tif(metadata)\n\t\t{\n\t\tcontract.createNFT(receiver, metadata, (err,response)=>{\n\t\t\tif(response) {\n                                console.log(response);\n\t\t\t\t\t\t\t\tapp.resetApp();\n\n                                app.setState({\n                                    tx20: response.tx20,\n\t\t\t\t\t\t\t\t\ttx721: response.tx721,\n                                    inProgress: false\n                                });\n \t\t\t\t\t\t}else{\n                \t\t\t\tconsole.log(err);\n            \t\t\t\t}\n\t\t\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontract.mint(receiver, amount, (err,response)=>{\n            \n\t\t\tif(response) {\n                                console.log(response);\n \t\n                                app.resetApp();\n\n                                app.setState({\n                                    tx20: response.tx20,\n\t\t\t\t\t\t\t\t\ttx721: response.tx721,\n                                    inProgress: false\n                                });\n             }else{\n                console.log(err);\n            }\n        });\n\t\t}    \n\t};\n\n\n\n    Approve = () => {\n\n        this.setState({\n            inProgress: true\n        });\n\t\t\n\t\t//this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\t\tconsole.log(this.state.approveDetail721.address);\n        var contract;\n\t\tif (this.state.approveDetail721.abi)\n\t\t{\n\t\tcontract = this.web3.eth.contract(this.state.approveDetail721.abi).at(this.state.approveDetail721.address);\n\t\t}\n\t\telse\n\t\t{\n        contract = this.web3.eth.contract(this.state.approveDetail20.abi).at(this.state.approveDetail20.address);\n\t\t}\n\n\t\tlet app = this;\n        let receiver = this.state.fields.receiver.toString();\n\t\t\n\t\n\t\tif (this.state.approveDetail20.abi)\n\t\t{\n\t\tlet amount = this.state.fields.amount  + 'e' + this.state.approveDetail20.decimal;\t\n\t\tamount = new this.web3.BigNumber(amount).toNumber();\n\t\tcontract.approve(receiver, amount, (err,response)=>{\n \n\t\t\tif(response) {\n                                console.log(response);\n\t\n                                app.resetApp();\n\n                                app.setState({\n                                    tx20: response.tx20,\n\t\t\t\t\t\t\t\t\ttx721: response.tx721,\n                                    inProgress: false\n                                });\n            }else{\n                console.log(err);\n            }\n        });\n\t\n\t\t}\n\t\telse\n\t\t{\n\t\tlet tokenid = this.state.fields.tokenid;\n\t\tcontract.approve(receiver, tokenid , (err,response)=>{\n \n\t\t\tif(response) {\n                                console.log(response);\n\t\n                                app.resetApp();\n\n                                app.setState({\n                                    tx20: response.tx20,\n\t\t\t\t\t\t\t\t\ttx721: response.tx721,\n                                    inProgress: false\n                                });\n            }else{\n                console.log(err);\n            }\n        });\n\t\n\t\t}\t\t\t    \n\t};\n\n    onInputChangeUpdateField = (name,value) => {\n        let fields = this.state.fields;\n\n        fields[name] = value;\n\n        this.setState({\n            fields\n        });\n    };\n\n    componentDidMount(){\n\t\n\t\tvar account;\n\t\t\n\t\tif (window.ethereum) {\n        const ethereum = window.ethereum;\n        window.web3 = new Web3(ethereum);\n\t    this.web3 = new Web3(ethereum);\n\t\n\t\tethereum.enable().then((accounts) => {\n  \t\t\n\t\taccount = accounts[0];\n \t\tthis.web3.eth.defaultAccount = account ;\n\t\t\n\t\tlet app = this;\n\t\t\n\t\tthis.setState({\n            account\n        });\n\n        this.setNetwork();\n        this.setGasPrice();\n        \n        Tokens20.forEach((token) => {\n            let contract = this.web3.eth.contract(token.abi);\n            let erc20Token = contract.at(token.address);\n\n            erc20Token.balanceOf(account,function (err,response) {\n                if(!err) {\n                    let decimal = token.decimal;\n                    let precision = '1e' + decimal;\n                    let balance = response.c[0] / precision;\n                    let name = token.name;\n                    let symbol = token.symbol;\n                    let icon = token.icon;\n                    let abi = token.abi;\n                    let address = token.address;\n\n                    balance = balance >= 0 ? balance : 0;\n\n                    let tokens20 = app.state.tokens20;\n\n                    if(balance > 0) tokens20.push({\n                        decimal,\n                        balance,\n                        name,\n                        symbol,\n                        icon,\n                        abi,\n                        address,\n                    });\n\n                    app.setState({\n                        tokens20\n                    })\n                }\n            });\n        });\n\t\t\n\t\t\n\t\t        Tokens721.forEach((token721) => {\n            let contract = this.web3.eth.contract(token721.abi);\n            let erc721Token = contract.at(token721.address);\n\n               erc721Token.MDTrack(account,function (err,response) {\n\t\t\t\tif(!err) {\n                    let name = token721.name;\n                    let symbol = token721.symbol;\n                    let icon = token721.icon;\n                    let abi = token721.abi;\n                    let address = token721.address;\n\t\t\t\t\tlet tokenid = response.c[0];\n\t\t\t\t\t\t\n                    tokenid = tokenid >= 0 ? tokenid : 0;\n\t\t\t\t\tif(tokenid!==0)\n\t\t\t\t\t{\n\t\t\t\t\terc721Token.tokenURI(tokenid,function (err,response) {\n\t\t\t\t\t\tif(!err) {\n\t\t\t\t\t\tlet metadata = response;                \n\t\t\t\t\t\tlet tokens721 = app.state.tokens721;\n\n                    tokens721.push({\n  \n                        name,\n                        symbol,\n\t\t\t\t\t\ttokenid,\t\t\n                        icon,\n                        abi,\n                        address,\n\t\t\t\t\t\tmetadata,\n                    });\n\n                    app.setState({\n                        tokens721\n                    })\n\t\t\t\t\t}\n                });\n            }\n\t\t\t}\n\t\t\t});\n        });\n\t\t})\n\t}\n\t}\t\t\t\t\t\t   \n\t\t\t\t\t\t   \n\t\t\n\t\n\n\t\t\t\t\t\t   \n\t\t\t\t\t\t   \n    render() {\n        if(this.isWeb3) {\n       \n                return (\n                    <div>\n                        <Nav appName={this.appName} network={this.state.network} />\n                        <Description />\n                        <Container onInputChangeUpdateField={this.onInputChangeUpdateField}\n                                   transferDetail20={this.state.transferDetail20}\n\t\t\t\t\t\t\t\t   transferDetail721={this.state.transferDetail721}\n\t\t\t\t\t\t\t\t   mintDetail20={this.state.mintDetail20}\n\t\t\t\t\t\t\t\t   mintDetail721={this.state.mintDetail721}\n\t\t\t\t\t\t\t\t   approveDetail20={this.state.approveDetail20}\n\t\t\t\t\t\t\t\t   approveDetail721={this.state.approveDetail721}\n                                   closeTransfer={this.closeTransfer}\n                                   newTransfer20={this.newTransfer20}\n\t\t\t\t\t\t\t\t   newTransfer721={this.newTransfer721}\n\t\t\t\t\t\t\t\t   newApprove20={this.newApprove20}\n\t\t\t\t\t\t\t\t   newApprove721={this.newApprove721}\n\t\t\t\t\t               newMint20={this.newMint20}\n\t\t\t\t\t\t\t\t   newMint721={this.newMint721}\n                                   Transfer={this.Transfer}\n\t\t\t\t\t\t\t\t   Mint={this.Mint}\n\t\t\t\t\t               Approve={this.Approve}\n                                   account={this.state.account}\n                                   defaultGasPrice={this.state.defaultGasPrice}\n                                   defaultGasLimit={this.state.defaultGasLimit}\n                                   tx20={this.state.tx20}\n\t\t\t\t\t\t\t\t   tx721={this.state.tx721}\n                                   inProgress={this.state.inProgress}\n                                   fields={this.state.fields}\n                                   tokens20={this.state.tokens20}\n\t\t\t\t\t\t\t\t   tokens721={this.state.tokens721}/>\n                    </div>\n                )\n            }\n        else{\n            return(\n                <InstallMetamask />\n            )\n        }\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}